# Virtual Hosts
# vim: syntax=apache
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
<VirtualHost *:80>
    DocumentRoot "/usr/local/www/"
    ServerName defaults
    ErrorLog "/var/log/apache24-ngu.nctu.me.log"
    CustomLog "/var/log/apache24-ngu.nctu.me.log" common
    Redirect  403 /
    ErrorDocument 403  "Direct IP access is not allowed, GO BACK HOME!"
    <Location />
        Require all denied
    </Location>
</VirtualHost>

<VirtualHost *:80>
    DocumentRoot "/usr/local/www/"
    ServerName ngu.nctu.me:80
#    ServerName 10.0.0.11
    ErrorLog "/var/log/apache24-ngu.nctu.me.log"
    CustomLog "/var/log/apache24-ngu.nctu.me.log" common

    Redirect / "https://ngu.nctu.me/"

    <Location /public/>
        Require all granted
    </Location>

    <Location /public/admin>
        AuthType Basic
        AuthName "THIS PAGE IS PROTECTED"
        AuthUserFile /usr/local/var/.htpasswd
        Require valid-user
    </Location>

    ProxyRequests off
#    <Proxy *>
#        Order allow, deny
#        Allow from all
#    </Proxy>

</VirtualHost>



